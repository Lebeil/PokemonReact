{"ast":null,"code":"var _jsxFileName = \"/Users/liedel/development/react/Pokemon/src/components/pokemon-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from \"react-router-dom\";\nimport PokemonService from \"../services/pokemon-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonForm = _ref => {\n  _s();\n\n  let {\n    pokemon,\n    isEditForm\n  } = _ref;\n  const history = useHistory();\n  const [form, setForm] = useState({\n    picture: {\n      value: pokemon.picture\n    },\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n\n    if (checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  }; // Pas d'image dans page Edit\n\n\n  const isAddForm = () => {\n    return !isEditForm;\n  };\n\n  const validateForm = () => {\n    let newForm = form; // Validator url\n\n    if (isAddForm()) {\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\"; // startsWith => les préfixes\n\n      if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg = 'L\\'url n\\'est pas valide.';\n        const newField = {\n          value: form.picture.value,\n          error: errorMsg,\n          isValid: false\n        };\n        newForm = { ...newForm,\n          ...{\n            picture: newField\n          }\n        };\n      } else {\n        const newField = {\n          value: form.picture.value,\n          error: '',\n          isValid: true\n        };\n        newForm = { ...newForm,\n          ...{\n            picture: newField\n          }\n        };\n      }\n    } // Validator name\n\n\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg = 'Le nom du pokémon est requis (1-25).';\n      const newField = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.name.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } // Validator hp\n\n\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.hp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } // Validator cp\n\n\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.cp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n    }\n  };\n\n  const isTypesValid = type => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    } // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    } // Après avoir passé les deux tests ci-dessus, on renvoie 'true',\n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n\n\n    return true;\n  };\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12 m8 offset-m2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hoverable\",\n          children: [isEditForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: pokemon.picture,\n              alt: pokemon.name,\n              style: {\n                width: '250px',\n                margin: '0 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-floating halfway-fab waves-effect waves-light\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: deletePokemon,\n                className: \"material-icons\",\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stacked\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  name: \"name\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.name.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this), form.name.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.name.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"hp\",\n                  children: \"Point de vie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"hp\",\n                  name: \"hp\",\n                  type: \"number\",\n                  className: \"form-control\",\n                  value: form.hp.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this), form.hp.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.hp.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cp\",\n                  children: \"D\\xE9g\\xE2ts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"cp\",\n                  name: \"cp\",\n                  type: \"number\",\n                  className: \"form-control\",\n                  value: form.cp.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this), form.cp.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.cp.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: type,\n                      type: \"checkbox\",\n                      className: \"filled-in\",\n                      value: type,\n                      disabled: !isTypesValid(type),\n                      checked: hasType(type),\n                      onChange: e => selectType(type, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: formatType(type),\n                        children: type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 45\n                  }, this)\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-action center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn\",\n                children: \"Valider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonForm, \"IXLQO8kzYHiF4GHIDCNF+NRV2hc=\", false, function () {\n  return [useHistory];\n});\n\n_c = PokemonForm;\nexport default PokemonForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonForm\");","map":{"version":3,"names":["React","useState","formatType","useHistory","PokemonService","PokemonForm","pokemon","isEditForm","history","form","setForm","picture","value","name","isValid","hp","cp","types","hasType","type","includes","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","isAddForm","validateForm","newForm","start","end","startsWith","endsWith","errorMsg","error","test","handleSubmit","preventDefault","isFormValid","updatePokemon","then","push","id","isTypesValid","length","deletePokemon","width","margin","map","marginBottom"],"sources":["/Users/liedel/development/react/Pokemon/src/components/pokemon-form.tsx"],"sourcesContent":["import React, {FunctionComponent, useState} from 'react';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport {useHistory} from \"react-router-dom\";\nimport PokemonService from \"../services/pokemon-service\";\n\ntype Props = {\n    pokemon: Pokemon\n    isEditForm: boolean\n};\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean\n};\n\ntype Form = {\n    picture: Field,\n    name: Field,\n    hp: Field,\n    cp: Field,\n    types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n\n    const history = useHistory();\n\n    const [form, setForm] = useState<Form>({\n        picture: {value: pokemon.picture},\n        name: {value: pokemon.name, isValid: true},\n        hp: {value: pokemon.hp, isValid: true},\n        cp: {value: pokemon.cp, isValid: true},\n        types: {value: pokemon.types, isValid: true}\n    });\n\n    const types: string[] = [\n        'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n        'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n    ];\n\n    const hasType = (type: string): boolean => {\n        return form.types.value.includes(type);\n    }\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const fieldName: string = e.target.name;\n        const fieldValue: string = e.target.value;\n        const newField: Field = {[fieldName]: {value: fieldValue}};\n\n        setForm({...form, ...newField});\n    }\n\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n        const checked = e.target.checked;\n        let newField: Field;\n\n        if (checked) {\n            // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n            const newTypes: string[] = form.types.value.concat([type]);\n            newField = {value: newTypes};\n        } else {\n            // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n            const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n            newField = {value: newTypes};\n        }\n\n        setForm({...form, ...{types: newField}});\n    }\n\n    // Pas d'image dans page Edit\n    const isAddForm = () => {\n        return !isEditForm;\n    }\n\n    const validateForm = () => {\n        let newForm: Form = form;\n\n        // Validator url\n        if (isAddForm()) {\n\n            const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n            const end = \".png\";\n\n            // startsWith => les préfixes\n            if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n                const errorMsg: string = 'L\\'url n\\'est pas valide.';\n                const newField: Field = {value: form.picture.value, error: errorMsg, isValid: false};\n                newForm = {...newForm, ...{picture: newField}};\n            } else {\n                const newField: Field = {value: form.picture.value, error: '', isValid: true};\n                newForm = {...newForm, ...{picture: newField}};\n            }\n        }\n\n        // Validator name\n        if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n            const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n            const newField: Field = {value: form.name.value, error: errorMsg, isValid: false};\n            newForm = {...newForm, ...{name: newField}};\n        } else {\n            const newField: Field = {value: form.name.value, error: '', isValid: true};\n            newForm = {...newForm, ...{name: newField}};\n        }\n\n        // Validator hp\n        if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n            const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n            const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n            newForm = {...newForm, ...{hp: newField}};\n        } else {\n            const newField: Field = {value: form.hp.value, error: '', isValid: true};\n            newForm = {...newForm, ...{hp: newField}};\n        }\n\n        // Validator cp\n        if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n            const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n            const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n            newForm = {...newForm, ...{cp: newField}};\n        } else {\n            const newField: Field = {value: form.cp.value, error: '', isValid: true};\n            newForm = {...newForm, ...{cp: newField}};\n        }\n\n        setForm(newForm);\n        return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n    }\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const isFormValid = validateForm();\n\n        if (isFormValid) {\n            pokemon.name = form.name.value;\n            pokemon.hp = form.hp.value;\n            pokemon.cp = form.cp.value;\n            pokemon.types = form.types.value;\n            PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n        }\n    }\n\n    const isTypesValid = (type: string): boolean => {\n        // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n        // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n        if (form.types.value.length === 1 && hasType(type)) {\n            return false;\n        }\n\n        // Cas n°1: Le pokémon a au moins 3 types.\n        // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n        if (form.types.value.length >= 3 && !hasType(type)) {\n            return false;\n        }\n\n        // Après avoir passé les deux tests ci-dessus, on renvoie 'true',\n        // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n        return true;\n    }\n\n    const deletePokemon = () => {\n        PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n    }\n\n    return (\n        <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"row\">\n                <div className=\"col s12 m8 offset-m2\">\n                    <div className=\"card hoverable\">\n                        {isEditForm && (\n                            <div className=\"card-image\">\n                                <img src={pokemon.picture} alt={pokemon.name}\n                                     style={{width: '250px', margin: '0 auto'}}/>\n                                <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                            <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n                            </span>\n                            </div>\n                        )}\n                        <div className=\"card-stacked\">\n                            <div className=\"card-content\">\n                                {/* Pokemon name */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Nom</label>\n                                    <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\"\n                                           value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                                    {form.name.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.name.error}\n                                        </div>\n                                    }\n                                </div>\n                                {/* Pokemon hp */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"hp\">Point de vie</label>\n                                    <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\"\n                                           value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                                    {form.hp.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.hp.error}\n                                        </div>\n                                    }\n                                </div>\n                                {/* Pokemon cp */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"cp\">Dégâts</label>\n                                    <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\"\n                                           value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                                    {form.cp.error &&\n                                        <div className=\"card-panel red accent-1\">\n                                            {form.cp.error}\n                                        </div>\n                                    }\n                                </div>\n                                {/* Pokemon types */}\n                                <div className=\"form-group\">\n                                    <label>Types</label>\n                                    {types.map(type => (\n                                        <div key={type} style={{marginBottom: '10px'}}>\n                                            <label>\n                                                <input id={type} type=\"checkbox\" className=\"filled-in\" value={type}\n                                                       disabled={!isTypesValid(type)} checked={hasType(type)}\n                                                       onChange={e => selectType(type, e)}></input>\n                                                <span>\n                                                    <p className={formatType(type)}>{type}</p>\n                                                </span>\n                                            </label>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                            <div className=\"card-action center\">\n                                {/* Submit button */}\n                                <button type=\"submit\" className=\"btn\">Valider</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default PokemonForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}