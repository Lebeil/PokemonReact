{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static addPokemon(pokemon) {\n    delete pokemon.created; //suppression de la date.\n\n    return fetch(`http://localhost:3001/pokemons`, {\n      method: 'POST',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static deletePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    console.error(error);\n  }\n\n}","map":{"version":3,"names":["PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","addPokemon","pokemon","created","method","body","JSON","stringify","headers","updatePokemon","deletePokemon","Object","keys","length","console"],"sources":["/Users/liedel/development/react/Pokemon/src/services/pokemon-service.ts"],"sourcesContent":["import Pokemon from \"../models/pokemon\";\n\nexport default class PokemonService {\n\n    static getPokemons(): Promise<Pokemon[]> {\n        return fetch('http://localhost:3001/pokemons')\n            .then(response => response.json())\n            .catch(error => this.handleError(error));\n    }\n\n    static getPokemon(id: number): Promise<Pokemon | null> {\n        return fetch(`http://localhost:3001/pokemons/${id}`)\n            .then(response => response.json())\n            .then(data => this.isEmpty(data) ? null : data)\n            .catch(error => this.handleError(error));\n    }\n\n    static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n        delete pokemon.created; //suppression de la date.\n\n        return fetch(`http://localhost:3001/pokemons`, {\n            method: 'POST',\n            body: JSON.stringify(pokemon),\n            headers: { 'Content-Type': 'application/json'}\n        })\n            .then(response => response.json())\n            .catch(error => this.handleError(error));\n    }\n\n    static updatePokemon(pokemon: Pokemon): Promise<Response> {\n        return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(pokemon),\n            headers: {'Content-type': 'application/json'}\n        })\n            .then(response => response.json())\n            .catch(error => this.handleError(error));\n    }\n\n    static deletePokemon(pokemon: Pokemon): Promise<{}> {\n        return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json'}\n        })\n            .then(response => response.json())\n            .catch(error => this.handleError(error));\n    }\n\n    static isEmpty(data: Object): boolean {\n        return Object.keys(data).length === 0;\n    }\n\n\n    static handleError(error: Error): void {\n        console.error(error);\n    }\n}"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAAqB;EAEd,OAAXC,WAAW,GAAuB;IACrC,OAAOC,KAAK,CAAC,gCAAD,CAAL,CACFC,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFC,KAFE,CAEIC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFb,CAAP;EAGH;;EAEgB,OAAVE,UAAU,CAACC,EAAD,EAAsC;IACnD,OAAOR,KAAK,CAAE,kCAAiCQ,EAAG,EAAtC,CAAL,CACFP,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEGQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFvC,EAGFL,KAHE,CAGIC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHb,CAAP;EAIH;;EAEgB,OAAVM,UAAU,CAACC,OAAD,EAAqC;IAClD,OAAOA,OAAO,CAACC,OAAf,CADkD,CAC1B;;IAExB,OAAOb,KAAK,CAAE,gCAAF,EAAmC;MAC3Cc,MAAM,EAAE,MADmC;MAE3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAFqC;MAG3CM,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAHkC,CAAnC,CAAL,CAKFjB,IALE,CAKGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALf,EAMFC,KANE,CAMIC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANb,CAAP;EAOH;;EAEmB,OAAbc,aAAa,CAACP,OAAD,EAAsC;IACtD,OAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;MACzDM,MAAM,EAAE,KADiD;MAEzDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAFmD;MAGzDM,OAAO,EAAE;QAAC,gBAAgB;MAAjB;IAHgD,CAAjD,CAAL,CAKFjB,IALE,CAKGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALf,EAMFC,KANE,CAMIC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CANb,CAAP;EAOH;;EAEmB,OAAbe,aAAa,CAACR,OAAD,EAAgC;IAChD,OAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;MACzDM,MAAM,EAAE,QADiD;MAEzDI,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAFgD,CAAjD,CAAL,CAIFjB,IAJE,CAIGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJf,EAKFC,KALE,CAKIC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CALb,CAAP;EAMH;;EAEa,OAAPK,OAAO,CAACD,IAAD,EAAwB;IAClC,OAAOY,MAAM,CAACC,IAAP,CAAYb,IAAZ,EAAkBc,MAAlB,KAA6B,CAApC;EACH;;EAGiB,OAAXjB,WAAW,CAACD,KAAD,EAAqB;IACnCmB,OAAO,CAACnB,KAAR,CAAcA,KAAd;EACH;;AArD+B"},"metadata":{},"sourceType":"module"}